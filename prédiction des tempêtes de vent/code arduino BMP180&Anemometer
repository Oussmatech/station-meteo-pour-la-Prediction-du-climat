#include "model.h"  // Inclure le fichier du modèle généré par micromlgen

Eloquent::ML::Port::DecisionTree classifier;  // Ajustez selon le type de modèle dans model.h

void setup() {
  Serial.begin(9600);
  while (!Serial);  // Attendre la connexion série
}

void loop() {
  Serial.println("Prediction de Tempête de Vent (1 = Oui, 0 = Non)");

  // Demander les entrées utilisateur
  float features[5];  // Tableau pour stocker les 5 variables du dataset

  Serial.println("Entrez la temperature (°C): ");
  while (!Serial.available());
  features[0] = Serial.parseFloat();
  Serial.print("Temperature: ");
  Serial.println(features[0]);

  Serial.println("Entrez la pression atmospherique (hPa): ");
  while (!Serial.available());
  features[1] = Serial.parseFloat();
  Serial.print("Pression: ");
  Serial.println(features[1]);

  Serial.println("Entrez la vitesse du vent à 15h (km/h): ");
  while (!Serial.available());
  features[2] = Serial.parseFloat();
  Serial.print("Vitesse vent (15h): ");
  Serial.println(features[2]);

  Serial.println("Entrez la vitesse du vent à 17h (km/h): ");
  while (!Serial.available());
  features[3] = Serial.parseFloat();
  Serial.print("Vitesse vent (17h): ");
  Serial.println(features[3]);

  Serial.println("Entrez la vitesse des rafales (km/h): ");
  while (!Serial.available());
  features[4] = Serial.parseFloat();
  Serial.print("Rafales: ");
  Serial.println(features[4]);

  // Prédiction
  int prediction = classifier.predict(features);

  // Affichage du résultat
  Serial.print("Prediction: ");
  if (prediction == 1) Serial.println("Tempête de vent probable !");
  else Serial.println("Pas de tempête de vent.");

  Serial.println("-----------------------------");
}
